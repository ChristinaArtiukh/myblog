# Generated by Django 3.1.6 on 2021-02-13 06:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, upload_to='media/%Y/%m/%d', verbose_name='Фото')),
                ('b_day', models.DateField(blank=True, default='9999-01-01', verbose_name='День рождения')),
                ('author_status', models.CharField(choices=[('author', 'Active'), ('inactive', 'Inactive')], default='inactive', max_length=100, verbose_name='Статус автора')),
                ('age', models.IntegerField(blank=True, default=0, verbose_name='Возвраст')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='Фамилия')),
                ('about', models.TextField(blank=True, verbose_name='Описание')),
                ('photo', models.ImageField(blank=True, upload_to='media/%Y/%m/%d', verbose_name='Фото')),
                ('b_day', models.DateField(blank=True, verbose_name='День рождения')),
                ('reg_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('change_date', models.DateTimeField(auto_now=True, verbose_name='Дата внесения изменеий')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Ссылка')),
                ('active', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=100, verbose_name='Активность')),
                ('number_of_news', models.IntegerField(blank=True, default=0, verbose_name='Количество статей')),
                ('age', models.IntegerField(blank=True, default=0, verbose_name='Возвраст')),
                ('number_days_of_activity', models.IntegerField(blank=True, default=0, verbose_name='Количество дней активности')),
                ('author_user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Информация автора')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'ordering': ['-reg_date'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('reg_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Ссылка')),
                ('number_of_news', models.IntegerField(blank=True, default=0, verbose_name='Колличество статей')),
                ('photo', models.ImageField(blank=True, upload_to='media/%Y/%m/%d', verbose_name='Фото')),
                ('author_user', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('content', models.TextField(verbose_name='Контент')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('change_date', models.DateTimeField(auto_now=True, verbose_name='Дата внесения изменений')),
                ('photo', models.ImageField(blank=True, upload_to='media/%Y/%m/%d', verbose_name='Фото')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=100, verbose_name='Статус')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Ссылка')),
                ('views', models.IntegerField(blank=True, default=0, verbose_name='Количество просмотров')),
                ('comments', models.IntegerField(blank=True, default=0, verbose_name='Количество комментариев')),
                ('liked', models.IntegerField(blank=True, default=0, verbose_name='Количество лайков')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_app.author', verbose_name='Автор')),
                ('author_user', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_app.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-create_date', '-change_date'],
            },
        ),
        migrations.CreateModel(
            name='CommentsNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('author_name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_app.news', verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='CommentsAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_app.author', verbose_name='Автор')),
                ('author_name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Комментарий к автору',
                'verbose_name_plural': 'Комментарии к автору',
                'ordering': ['author_name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='preferences',
            field=models.ManyToManyField(blank=True, to='blog_app.Category', verbose_name='Предпочтения'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
